// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum AnswerStatus {
  CORRECT
  INCORRECT
  UNANSWERED
}

enum PromptType {
  CUSTOM
  ONE
  TWO
}

model Question {
  id String @id @default(uuid()) @db.Uuid
  session_id String @db.Uuid
  session Session @relation(fields: [session_id], references: [id])
  title String
  topic String
  answer Answer[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Answer {
  id String @id @default(uuid()) @db.Uuid
  attempt_id String @db.Uuid
  attempt Attempt @relation(fields: [attempt_id], references: [id])
  question_id String @db.Uuid
  question Question @relation(fields: [question_id], references: [id])
  user_answer String? @default("")
  actual_answer String? @default("")
  tta Decimal? @default(0)
  status AnswerStatus? @default(UNANSWERED)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Attempt {
  id String @id @default(uuid()) @db.Uuid
  session_id String @db.Uuid
  session Session @relation(fields: [session_id], references: [id])
  answers Answer[]
  feedback String
  topic_feedback Json
  average_tta Decimal @default(0)
  total_time Decimal @default(0)
  accuracy Int @default(0)
}

model Session {
  id String @id @default(uuid()) @db.Uuid
  user_id String @db.Uuid
  questions Question[]
  attempts Attempt[]
  prompt String
  prompt_type PromptType
  model String
  completion_id String
  model_usage Json
  email String
  file_id String @unique
  name String
  no_of_questions Int? @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}